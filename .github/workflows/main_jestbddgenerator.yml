# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js app to Azure Web App - JestBDDGenerator

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Install, build, and test
        run: |
          # Deterministic install
          npm ci
          # Clean outputs to avoid stale state from committed *.tsbuildinfo
          # Remove server build output entirely
          rm -rf dist
          # Remove only generated client bundles; keep authored assets like CSS/HTML
          rm -f public/assets/*.bundle.js || true
          rm -rf public/assets/chunks || true
          rm -f public/assets/*.map || true
          rm -f public/assets/**/*.d.ts || true
          # Force TypeScript project build so dist/ is emitted even if *.tsbuildinfo exists
          npx tsc -b --force
          # Bundle client assets with Rollup
          npx rollup -c
          # Optional tests
          npm run test --if-present

      - name: Verify build output
        run: |
          echo "Workspace contents after build:"
          ls -la
          echo "Check dist directory:"
          if [ -d dist ]; then
            ls -la dist
          else
            echo "ERROR: dist/ not found after build. Failing early."
            exit 1
          fi
          echo "Check public/assets directory:"
          if [ -d public/assets ]; then
            ls -la public/assets
          else
            echo "ERROR: public/assets/ not found after build. Rollup outputs should be here."
            exit 1
          fi
          echo "Verify client bundles exist:"
          if ls public/assets/*.bundle.js >/dev/null 2>&1; then
            echo "Found client bundles:"
            ls -1 public/assets/*.bundle.js
          else
            echo "ERROR: No *.bundle.js files found in public/assets."
            exit 1
          fi

      - name: Prepare production bundle
        run: |
          # keep only production dependencies for runtime
          npm prune --production
          # assemble release folder with runtime files
          rm -rf release
          mkdir -p release
          cp -R dist release/dist
          # include client assets and HTML
          if [ ! -d public ]; then
            echo "ERROR: public/ directory missing during packaging."
            exit 1
          fi
          cp -R public release/public
          cp package.json package-lock.json release/
          cp -R node_modules release/node_modules
          # create a deterministic zip for deploy
          (cd release && zip -r ../release.zip .)

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app
          path: .

      - name: Show downloaded files
        run: |
          ls -la
          unzip -l release.zip
      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'JestBDDGenerator'
          slot-name: 'Production'
          package: release.zip
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_1025999A2986430896A01B6C77505A38 }}
